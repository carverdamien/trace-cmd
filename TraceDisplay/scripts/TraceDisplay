#!/usr/bin/env python3.7
from TraceDisplay import Trace, Image, bokeh_render, mpl_render, plotly_render
import argparse, sys, os, logging

if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description="Render from image",
    )
    parser.add_argument("render_path",
                        type=str,
                        help="path to render output file",
    )
    parser.add_argument("input_path",
                        type=str,
                        help="path to the image or trace input file",
    )
    parser.add_argument("--force","-f",
                        action="store_true",
                        help="ignore checks. overwrite output file if it already exists",
    )
    args = parser.parse_args()
    logging.basicConfig(level=logging.DEBUG)
    image = Image()
    if os.path.splitext(args.input_path)[1] in ['.dat','.gz']:
        t = Trace()
        t.load(args.input_path)
        image.build(t)
    else:
        image.load(args.input_path)
    if os.path.splitext(args.render_path)[1] == '.html':
        # plotly_render(args.render_path, image)
        bokeh_render(args.render_path, image)
    else:
        mpl_render(args.render_path, image)
